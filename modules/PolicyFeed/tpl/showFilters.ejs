<%

var {organizations, people} = vars;

%>
<div style="padding: 0 10px;">
<h1 class="silent">KąVeikiaValdžia.lt yra:<br><small>&nbsp;&bull; Per 20000 valdžios įstaigų nutarimų, pranešimų, darbotvarkių.<br>&nbsp;&bull; Operatyviai atnaujinama informacija.</small></h1>

<h2 class="silent">Raskite ir užsisakykite tai, kas aktualu Jums:</h2>
<form id="search" method="get" action="/docs/search/">
<p><input id="q" name="q">
<input id="search-submit" type="submit" value="Ieškoti">
<a id="search-all-link" href="/docs/">Visos naujienos</a></p>
</form>
<!--<span class="silent">Pavyzdžiai:</span>-->
</div>

<table id="filter-table" border="0" cellspacing="0" cellpadding="10">
<tbody id="filter-examples">
<tr>
    <td><ul><%

var groupmap = organizations.getGroupMap();

var top = groupmap.top;
var i = Math.floor(Math.random() * top.length);
print('<li><a href="/docs/search/?q=', encodeURIComponent(top[i].query), '">', top[i].org, '</a></li>');

var ministerijos = groupmap.ministerijos;
var i = Math.floor(Math.random() * ministerijos.length);
print('<li><a href="/docs/search/?q=', encodeURIComponent(ministerijos[i].query), '">', ministerijos[i].organization, '</a></li>');

var i = Math.floor(Math.random() * groupmap.LT.length);
print('<li><a href="/docs/search/?q=', encodeURIComponent(groupmap.LT[i].query), '">', groupmap.LT[i].organization, '</a></li>');


%></ul>
</td>
<td><ul><%

var ppl = people.list();
//print(ppl.map(uneval).join("<br>"));

for (var i=0;i<3;i++) {
    var k = Math.floor(Math.random() * ppl.length);
    print('<li><a href="/docs/search/?q=', encodeURIComponent(ppl[k].query), '">', ppl[k].fname, " ", ppl[k].lname, '</a></li>');
}


%></ul>
</td>
<td><%

var savivaldybes = [
    ["Akmenė", "Akmenės rajonas", "Akmenė"],
    ["Alytaus m.", "Alytaus miestas", "Alytus"],
    ["Alytaus r.", "Alytaus rajonas"],
    ["Anykščių r.", "Anykščių rajonas", "Anykščiai"],
    ["Birštonas", "Birštonas"],
    ["Biržų r.", "Biržų rajonas", "Biržai"],
    ["Druskininkai", "Druskininkai"],
    ["Elektrėnai", "Elektrėnai"],
    ["Ignalinos r.", "Ignalinos rajonas", "Ignalina"],
    ["Jonavos r.", "Jonavos rajonas", "Jonava"],
    ["Joniškio r.", "Joniškio rajonas", "Joniškis"],
    ["Jurbarko r.", "Jurbarko rajonas", "Jurbarkas"],
    ["Kaišiadorių r.", "Kaišiadorių rajonas", "Kaišiadorys"],
    ["Kalvarija", "Kalvarija"],
    ["Kauno m.", "Kauno miestas", "Kaunas"],
    ["Kauno r.", "Kauno rajonas"],
    ["Kazlų Rūda", "Kazlų Rūda"],
    ["Kėdainių r.", "Kėdainių rajonas", "Kėdainiai"],
    ["Kelmės r.", "Kelmės rajonas", "Kelmė"],
    ["Klaipėdos m.", "Klaipėdos miestas", "Klaipėda"],
    ["Klaipėdos r.", "Klaipėdos rajonas"],
    ["Kretingos r.", "Kretingos rajonas", "Kretinga"],
    ["Kupiškio r.", "Kupiškio rajonas", "Kupiškis"],
    ["Lazdijų r.", "Lazdijų rajonas", "Lazdijai"],
    ["Marijampolė", "Marijampolė"],
    ["Mažeikių r.", "Mažeikių rajonas", "Mažeikiai"],
    ["Molėtų r.", "Molėtų rajonas", "Molėtai"],
    ["Neringa", "Neringa", "Nida"],
    ["Pagėgiai", "Pagėgiai"],  
    ["Pakruojo r.", "Pakruojo rajonas", "Pakruojis"],
    ["Palangos m.", "Palangos miestas", "Palanga"],
    ["Panevėžio m.", "Panevėžio miestas", "Panevėžys"],
    ["Panevėžio r.", "Panevėžio rajonas"],
    ["Pasvalio r.", "Pasvalio rajonas", "Pasvalys"],
    ["Plungės r.", "Plungės rajonas", "Plungė"],
    ["Prienų r.", "Prienų rajonas", "Prienai"],
    ["Radviliškio r.", "Radviliškio rajonas", "Radviliškis"],
    ["Raseinių r.", "Raseinių rajonas", "Raseiniai"],
    ["Rietavas", "Rietavas"],
    ["Rokiškio r.", "Rokiškio rajonas", "Rokiškis"],
    ["Skuodo r.", "Skuodo rajonas", "Skuodas"],
    ["Šakių r.", "Šakių rajonas", "Šakiai"],
    ["Šalčininkų r.", "Šalčininkų rajonas", "Šalčininkai"],
    ["Šiaulių m.", "Šiaulių miestas", "Šiauliai"],
    ["Šiaulių r.", "Šiaulių rajonas"],
    ["Šilalės r.", "Šilalės rajonas", "Šilalė"],
    ["Šilutės r.", "Šilutės rajonas", "Šilutė"],
    ["Širvintų r.", "Širvintų rajonas", "Širvintos"],
    ["Švenčionių r.", "Švenčionių rajonas", "Švenčionys"],
    ["Tauragės r.", "Tauragės rajonas", "Tauragė"],
    ["Telšių r.", "Telšių rajonas", "Telšiai"],
    ["Trakų r.", "Trakų rajonas", "Trakai"],
    ["Ukmergės r.", "Ukmergės rajonas", "Ukmergė"],
    ["Utenos r.", "Utenos rajonas", "Utena"],
    ["Varėnos r.", "Varėnos rajonas", "Varėna"],
    ["Vilkaviškio r.", "Vilkaviškio rajonas", "Vilkaviškis"],
    ["Vilniaus m.", "Vilniaus miestas"],
    ["Vilniaus r.", "Vilniaus rajonas"],
    ["Visaginas", "Visaginas"],
    ["Zarasų r.", "Zarasų rajonas", "Zarasai"]
];

savivaldybes = savivaldybes.map(function (item) {
        item[2] = item[2] || "";
        item = {
            group: item[0],
            title: item[1],
            queries: item[2]
            };
        item.query = 'orgroups:"' + item.group + '","' + item.title + '"';
        if (item.queries) {
            item.query += ',"' + item.queries + '"';
        }
        return item;
    });

print('<ul>');
for (var i=0;i<3;i++) {
    var k = Math.floor(Math.random() * savivaldybes.length);
    var sav = savivaldybes[k];
    if (sav) {
        print('<li><a href="/docs/search/?q=', encodeURIComponent(sav.query), '">', sav.title, '</a></li>');
    } else {
        print(k);
    }
}

%></ul>
</td></tr>
<tr id="expand-links">
<td class="orgs"><a href="javascript:PolicyFeed.expandFilters('orgs');">Daugiau įstaigų ir organizacijų &hellip;</a></td>
<td class="people"><a href="javascript:PolicyFeed.expandFilters('people');">Daugiau politikų, tarnautojų, pareigūnų &hellip;</a></td>
<td class="regions"><a href="javascript:PolicyFeed.expandFilters('regions');">Daugiau savivaldybių &hellip;</a></td>
</tbody>
<tbody id="expansion">
<tr class="orgs">
<%

groups = {
    top: "Aukščiausios valstybės institucijos",
    ministerijos: "Ministerijos",
    Prezidentas: "Prezidentui atskaitingos institucijos",
    Seimas: "Seimui atskaitingos institucijos",
    "Vyriausybė": "Vyriausybei atskaitingos institucijos",
    AM: "Aplinkos ministerijos įstaigos",
    EnMin: "Energetikos ministerijos įstaigos",
    FinMin: "Finansų ministerijos įstaigos",
    KAM: "Krašto apsaugos ministerijos įstaigos",
    LRKM: "Kultūros ministerijos įstaigos",
    SocMin: "Socialinės apsaugos ir darbo ministerijos įstaigos",
    SM: "Susisiekimo ministerijos įstaigos",
    SAM: "Sveikatos apsaugos ministerijos įstaigos",
    "ŠMM": "Švietimo ir mokslo ministerijos įstaigos",
    TM: "Teisingumo ministerijos įstaigos",
    "ŪkMin": "Ūkio ministerijos įstaigos",
    URM: "Užsienio reikalų ministerijos įstaigos",
    VRM: "Vidaus reikalų ministerijos įstaigos",
    "ŽŪM": "Žemės ūkio reikalų ministerijos įstaigos",
    partijos: "Politinės partijos"
};

var total = 0;
for (var k in groups) {
    if (groupmap[k]) {
        total += groupmap[k].length;
    }
}

var column = Math.ceil(total / 3);

var current = 0;
print('<td>');
for (var k in groups) {
    if (current > column) {
        print('</td><td>');
        current = 0;
    }

    if (groupmap[k]) {
        current += groupmap[k].length;

        print('<h4><a href="/docs/search/?q=orgroups:', k, '">', groups[k], '</a></h4><ul>');
        for each (var org in groupmap[k]) {
            var name = org.organization
                .replace("Lietuvos Respublikos", "LR")
                .replace("Valstybės įmonė", "VĮ")
                .replace("Viešoji įstaiga", "VšĮ");
            print('<li><a href="/docs/search/?q=', encodeURIComponent(org.query), '">', name, '</a></li>');
        }
        print('</ul>');
    }
}
print('</td>');

%>
</tr>
<tr class="people">
<%

ppl.sort(function (a, b) { return a.lname > b.lname; });
var column = Math.ceil(ppl.length / 3);

var last_letter = "";
for (var i=0;i<3;i++) {
    print('<td><ul>');
    for (var j=0;j<column;j++) {
        var k = i*column + j;
        if (ppl[k]) {
            if (ppl[k].lname[0] != last_letter) {
                last_letter = ppl[k].lname[0];
                print('<li><b>', last_letter, '</b></li>');
            }
            print('<li><a href="/docs/search/?q=', encodeURIComponent(ppl[k].query), '">', ppl[k].fname, ' ', ppl[k].lname, '</a></li>');
        }

    }
    print('</ul></td>');
}

%>
</tr>
<tr class="regions">
<%

var column = Math.ceil(savivaldybes.length / 3);
for (var i=0;i<3;i++) {
    print('<td><ul>');
    for (var j=0;j<column;j++) {
        var k = i*column + j;
        if (savivaldybes[k]) {
            print('<li><a href="/docs/search/?q=', encodeURIComponent(savivaldybes[k].query), '">', savivaldybes[k].title, '</a></li>');
        }
    }
    print('</ul></td>');
}

%></tr>

</tbody>
</table>

<ul class="silent">
<li>Ar žinote ką veikia jūsų rinktas Seimo narys?</li>
<li>Ar žinote ką veikia valdžia jūsų mieste ar rajone?</li>
<li>Jums aktualias naujienas galite užsisakyti el. paštu, RSS, įsikelti į savo tinklalapį ar Facebook puslapį.</li>
</ul>

